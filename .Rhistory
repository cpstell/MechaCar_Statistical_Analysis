load("C:/Users/Yanke/Documents/Boot Camp/UCF-VIRT-DATA-PT-06-2022-U-B/15-R/Day_01/01_Ins_RBasics/Solved/.RData")
View(random_list)
setwd("~/")
>?cor()
?cor()
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
setwd("~/R")
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
?lm()
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
library(tidyverse)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
?chisq.test()
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
setwd("C:/Users/Yanke/Documents/Boot Camp/Module 15/Class/MechaCar_Statistical_Analysis")
setwd("C:/Users/Yanke/Documents/Boot Camp/Module 15/Class/MechaCar_Statistical_Analysis")
about
-- version
version
library(dplyr)
setwd("C:/Users/Yanke/Documents/Boot Camp/Module 15/Class/MechaCar_Statistical_Analysis/Data")
MechaCar_mpg <- read.csv(file='./Data/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
setwd("C:/Users/Yanke/Documents/Boot Camp/Module 15/Class/MechaCar_Statistical_Analysis")
MechaCar_mpg <- read.csv(file='./Data/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(MechaCar_mpg)
Mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoler_angle + ground_clearance + AWD, data=MechaCar_mpg)
Mecha_lm
Mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar_mpg)
Mecha_lm
# import csv file
# example code from 15.2.3
# demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
MechaCar_mpg <- read.csv(file='./Data/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
# Reform linear regression using the lm() function
# example code from 15.7.3
# lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)
Mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar_mpg)
Mecha_lm
# view using summary
summary(Mecha_lm)
#view R-squared
summary(Mecha_lm)$r.squared
Suspension_Coil <- read.csv(file='./Data/Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
View(Suspension_Coil)
# Create a summary table for suspension coils
total_Summary <- Suspension_Coil %>%
summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), Std_Dev=sd(PSI))
total_Summary
View(total_Summary)
#view by lots using
lot_summary <- Suspension_Coil %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), Std_Dev=sd(PSI))
lot_summary
View(total_Summary)
View(lot_summary)
# t.test by lots
# Lot 1
t.test(subset(Suspension_Coil, Manufacturing_Lot=="Lot1")$PSI, mu=1500)
# Lot 2
t.test(subset(Suspension_Coil, Manufacturing_Lot=="Lot2")$PSI, mu=1500)
# Lot 3
t.test(subset(Suspension_Coil, Manufacturing_Lot=="Lot3")$PSI, mu=1500)
# Ho: mu = 1500
# Ha: mu <> 1500
t.test(Suspension_Coil$PSI, mu=1500)
